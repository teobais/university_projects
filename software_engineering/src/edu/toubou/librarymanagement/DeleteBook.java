/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package edu.toubou.librarymanagement;

import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author theo
 */
public class DeleteBook extends javax.swing.JFrame {

    private Connection connection = null;
    private ResultSet rs = null;
    private PreparedStatement pst = null;
    
    private Book book;
    
    /** Creates new form DeleteBook */
    public DeleteBook() {
        initComponents();
        connection = DatabaseConnection.getConnection();
        //the initial value of the combobox is the one
        //that prompts/informs the user to select something
        categoryJComboBox.setSelectedIndex(-1);
        
        //we have to consider each of both cases,
        //so if a user wants to delete the whole title, itemNoJTextField must be disabled.
        //we can achieve that by enabling it, if only "Item" is selected
        //from the comboBox
        itemNoJTextField.setEnabled(false);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        deleteJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        categoryJComboBox = new javax.swing.JComboBox();
        itemNoJTextField = new javax.swing.JTextField();
        titleNameJTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delete a Book");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Required Data"));

        jLabel3.setText("Book Item No : ");

        deleteJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/toubou/librarymanagement/delete_record_icon.png"))); // NOI18N
        deleteJButton.setText("Remove");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Book Title :");

        jLabel1.setText("Category :");

        categoryJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Item" }));
        categoryJComboBox.setRenderer(new PromptComboBoxRenderer("Select Category"));
        categoryJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryJComboBoxActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/toubou/librarymanagement/Start-Menu-Help-icon.png"))); // NOI18N
        jButton1.setText("Main Menu");
        jButton1.setMaximumSize(new java.awt.Dimension(95, 24));
        jButton1.setMinimumSize(new java.awt.Dimension(95, 24));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(titleNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemNoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteJButton)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemNoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteJButton)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoryJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryJComboBoxActionPerformed
        if(categoryJComboBox.getSelectedIndex() == 0)
        {
            //handling the case that the user made a mistake
            //and selected "Item", but meant "Title"
            itemNoJTextField.setEnabled(false);
        }
        else
        {
            itemNoJTextField.setEnabled(true);
        }
    }//GEN-LAST:event_categoryJComboBoxActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        deleteTitleOrItem();
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Librarian lib = new Librarian();
        lib.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteTitleOrItem()
    {
         //user wants to delete a title
      if(categoryJComboBox.getSelectedIndex() == 0 && (!titleNameJTextField.getText().equals("")))
      {
          int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the entire Title?","Confirm Delete",JOptionPane.YES_NO_OPTION);
            if(option==JOptionPane.YES_OPTION)
               deleteTitle();  
      }else if(categoryJComboBox.getSelectedIndex() == 1 && (!titleNameJTextField.getText().equals(""))
             && (!itemNoJTextField.getText().equals("")))
      {
          int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the specified Item?","Confirm Delete",JOptionPane.YES_NO_OPTION);
            if(option==JOptionPane.YES_OPTION)
            {
                deleteItem();
                //updateAvailableItems();
            }
            
      }else
                    JOptionPane.showMessageDialog(null,"Please fill all the required fields","Something went wrong",JOptionPane.WARNING_MESSAGE);
      
    }
    private void deleteItem()
    {
        String query = "DELETE FROM books WHERE Name=? AND ItemNo=? " ;
        String query2 = "UPDATE available_items_books SET AvailableItems=(SELECT"
                            + " COUNT(*) FROM books WHERE Name='"+titleNameJTextField.getText()+"') WHERE Name= '"+titleNameJTextField.getText()+"'  " ;
       
        try
        {
            pst = connection.prepareStatement(query);
            pst.setString(1, titleNameJTextField.getText());
            pst.setString(2, itemNoJTextField.getText());
            pst.execute();
            JOptionPane.showMessageDialog(null,"All records with the specified Item were deleted from the database.","Query Success",JOptionPane.INFORMATION_MESSAGE);
            clearJTextFields();
            
            }catch(SQLException e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
            try
        {
            pst = connection.prepareStatement(query2);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"All tables are now up-to-date","Item Availability Update",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
        
        
    }
    
    private void deleteTitle()
    {
        String title = titleNameJTextField.getText();
        String deleteFromBooksTable = "DELETE FROM books WHERE Name='"+title+"' ";
        String deleteFromAvailableItemsTable = "DELETE FROM available_items_books WHERE Name='"+title+"' " ;
        
        try
        {
            //using a general statement in order to gain
            //lines of code, by using a batch of queries
            java.sql.Statement statement = connection.createStatement();
            statement.addBatch(deleteFromBooksTable);
            statement.addBatch(deleteFromAvailableItemsTable);
            
            statement.executeBatch();
            JOptionPane.showMessageDialog(null,"Title deleted from wherever it was registered.","Query Success",JOptionPane.WARNING_MESSAGE);
        
            clearJTextFields();
        }catch(SQLException e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
        
        
        
                
    }
    
    private void clearJTextFields()
    {
        titleNameJTextField.setText("");
        itemNoJTextField.setText("");
        categoryJComboBox.setSelectedIndex(-1);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox categoryJComboBox;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JTextField itemNoJTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField titleNameJTextField;
    // End of variables declaration//GEN-END:variables
}
