/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package edu.toubou.librarymanagement;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author theo
 */
public class InsertBook extends javax.swing.JFrame {

    private Book newBook;
    private boolean checkTitleExistenceIntoDB;
    private boolean titleInsertion = true;
    private int itemsNumber;
    
    private Connection connection = null;
    private ResultSet rs = null;
    private PreparedStatement pst = null;
    
    /** Creates new form InsertBook */
    public InsertBook() {
        
        initComponents();
        connection = DatabaseConnection.getConnection();
        
        /* the constructor must handle the case, where there is a copy of the inserted
         * title into the DB, so when the windows is created, only the titleNameJTextField
         * is visible; the other components will get visible in case of title's non-existence
         * in DB. The before mentioned components are into newTitleJPanel - we have chosen
         * to implement it in this way, so that only one line of code is required whenever
         * the user adds a new item or a new title */
       
        textFieldSetState(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        newTitleJPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        saveJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        itemNoJTextField = new javax.swing.JTextField();
        isbnJTextField = new javax.swing.JTextField();
        kindJTextField = new javax.swing.JTextField();
        authorJTextField = new javax.swing.JTextField();
        pagesJTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        yearJTextField = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        searchJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        titleNameJTextField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insert Book");

        jPanel2.setBackground(new java.awt.Color(242, 228, 242));

        newTitleJPanel.setBackground(new java.awt.Color(226, 208, 187));
        newTitleJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("New Title Data"));

        jLabel3.setText("Author : ");

        saveJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/toubou/librarymanagement/save_icon.png"))); // NOI18N
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("ISBN : ");

        itemNoJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemNoJTextFieldKeyReleased(evt);
            }
        });

        isbnJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                isbnJTextFieldKeyReleased(evt);
            }
        });

        kindJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kindJTextFieldKeyReleased(evt);
            }
        });

        authorJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                authorJTextFieldKeyReleased(evt);
            }
        });

        pagesJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pagesJTextFieldKeyReleased(evt);
            }
        });

        jLabel6.setText("Pages : ");

        jLabel7.setText("Kind : ");

        jLabel2.setText("Item Number : ");

        jLabel4.setText("Year : ");

        yearJTextField.setDateFormatString("yyyy");

        javax.swing.GroupLayout newTitleJPanelLayout = new javax.swing.GroupLayout(newTitleJPanel);
        newTitleJPanel.setLayout(newTitleJPanelLayout);
        newTitleJPanelLayout.setHorizontalGroup(
            newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTitleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveJButton)
                    .addGroup(newTitleJPanelLayout.createSequentialGroup()
                        .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newTitleJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(19, 19, 19))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newTitleJPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemNoJTextField)
                            .addComponent(authorJTextField)
                            .addComponent(kindJTextField)
                            .addComponent(pagesJTextField)
                            .addComponent(isbnJTextField)
                            .addComponent(yearJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        newTitleJPanelLayout.setVerticalGroup(
            newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newTitleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemNoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(newTitleJPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(yearJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(kindJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(isbnJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newTitleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagesJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(saveJButton)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Title", 0, 0, new java.awt.Font("Vijaya", 1, 18), new java.awt.Color(0, 153, 153))); // NOI18N

        searchJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/toubou/librarymanagement/search_icon.png"))); // NOI18N
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Title's Name: ");

        titleNameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                titleNameJTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titleNameJTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchJButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(titleNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newTitleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newTitleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/toubou/librarymanagement/Start-Menu-Help-icon.png"))); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(95, 24));
        jButton2.setMinimumSize(new java.awt.Dimension(95, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void titleNameJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleNameJTextFieldKeyReleased
             
    }//GEN-LAST:event_titleNameJTextFieldKeyReleased

    private void pagesJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pagesJTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_pagesJTextFieldKeyReleased

    private void authorJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorJTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_authorJTextFieldKeyReleased

    private void kindJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kindJTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_kindJTextFieldKeyReleased

    private void isbnJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_isbnJTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnJTextFieldKeyReleased

    private void itemNoJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNoJTextFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNoJTextFieldKeyReleased

    private void titleNameJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleNameJTextFieldKeyPressed
        
    }//GEN-LAST:event_titleNameJTextFieldKeyPressed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        itemsNumber=0;  //initialize the items number each time that the search button is pressed
        
        //make the searching processes if only the title's text field is not empty
        if(!titleNameJTextField.getText().equals(""))
        {
            checkTitleExistenceIntoDB = searchTitle();
        
            //this means that we have an item insertion
            //so, in some point, we have to change the initial value of titleInsertion variable
            if(checkTitleExistenceIntoDB == true)
            {   
                //there are some copies of the inserted title
                titleInsertion = false;

                textFieldSetState(false);
                itemNoJTextField.setEnabled(true);

                String items = JOptionPane.showInputDialog("Title exists\nPlease specify the number of items that you wish to insert:");
                    itemNoJTextField.requestFocus();
                if(items.length() > 0)
                {
                    itemsNumber = Integer.parseInt(items); 
                }
                
            }
            else    //this means that we have a title insertion
            {
                //inform the user
                JOptionPane.showMessageDialog(null,"Title doesn't exist.\nPlease provide all the reequired data."
                        , "New Title",JOptionPane.INFORMATION_MESSAGE);
                textFieldSetState(true);
                clearJTextFields(false);
            }
        }    
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        System.out.println(titleNameJTextField.getText());
        if(titleNameJTextField.getText().equals("") || itemNoJTextField.getText().equals("")
                || authorJTextField.getText().equals("") || ((JTextField)yearJTextField.getDateEditor().getUiComponent()).getText().equals("")
                || kindJTextField.getText().equals("") || isbnJTextField.getText().equals("")
                ||pagesJTextField.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Retry insert the record by filling all the fields","Something went wrong",JOptionPane.WARNING_MESSAGE);
                    
        }
        else
        {
            insert();
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Librarian lib = new Librarian();
        lib.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public boolean searchTitle()
    {
        try
        {
            String query = "select * from books where Name = ?";
            pst = connection.prepareStatement(query);
            pst.setString(1,titleNameJTextField.getText());
            
            rs = pst.executeQuery();
            
            //this will be executed, only if there is at least 
            //one copy of the specified title, registered into the database 
            if(rs.next())
            {
                System.out.println(rs.getString(1));
                
                authorJTextField.setText(rs.getString("Author"));
                yearJTextField.setDate(rs.getDate("Year"));
                kindJTextField.setText(rs.getString("Kind"));
                isbnJTextField.setText(rs.getString("ISBN"));
                pagesJTextField.setText(rs.getString("Pages"));
                return true;
            }
            
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        finally{
            try{
                rs.close();
                pst.close();
                }
            catch(Exception e)
            {
            }
        }
       return false;
        
    }
    
    private void insert()
    {
        //either for title insertion or an item insertion
        //in both cases, a new Book has to be created
        //so this is why we create a new instance of Book
        //class, out of the insertion type check
        newBook = new Book();
        newBook.setTitleName(titleNameJTextField.getText());
        
        if(titleInsertion == true)
        {
            newBook.setItemNo(Integer.parseInt(itemNoJTextField.getText()));
            newBook.setAuthor(authorJTextField.getText());
            newBook.setYear(yearJTextField.getDate());
            newBook.setKind(kindJTextField.getText());
            newBook.setISBN(isbnJTextField.getText());
            newBook.setPages(Integer.parseInt(pagesJTextField.getText()));
            
            insertFunction(true);
            clearJTextFields(true);
        }//end of initial if statement
        else     //here he handle the case of an item insertion
        {
            insertFunction(false);
            itemsNumber = itemsNumber - 1;
            
            if(itemsNumber > 0)
            {
                itemNoJTextField.setText("");
                itemNoJTextField.requestFocus();
            }
                  
            
            else
            {
                clearJTextFields(true);
                textFieldSetState(false);
            }
                
           
        }
     
    }
    
    private void insertFunction(boolean insertAtitle)
    {
        String query = "INSERT INTO books(Name,ItemNo,Author,Year,Kind,ISBN,Pages) VALUES(?,?,?,?,?,?,?) " ;
            try
            {
                
                pst = connection.prepareStatement(query);
                
                
                
                if(insertAtitle == true)
                {
                    pst.setString(1, newBook.getTitleName());
                    pst.setInt(2,newBook.getItemNo());
                }else
                {
                    pst.setString(1,titleNameJTextField.getText());
                    pst.setInt(2,Integer.parseInt(itemNoJTextField.getText()));
                }
                
                
                pst.setString(3, authorJTextField.getText());   //following class diagram
                pst.setString(4, ((JTextField)yearJTextField.getDateEditor().getUiComponent()).getText());
                pst.setString(5, kindJTextField.getText());
                pst.setString(6, isbnJTextField.getText());
                pst.setInt(7, Integer.parseInt(pagesJTextField.getText()));
                
                pst.execute();
                
                if(insertAtitle==true)
                   JOptionPane.showMessageDialog(null,"Title successfully inserted to database.","Well done!",JOptionPane.INFORMATION_MESSAGE);
                else 
                   JOptionPane.showMessageDialog(null,"Item successfully inserted to database.","Well done!",JOptionPane.INFORMATION_MESSAGE);
           
                //extra code
                if(insertAtitle == true)
                {
                    String insertQuery = "INSERT INTO available_items_books VALUES(?,?) " ;
                    try
                    {
                        pst = connection.prepareStatement(insertQuery);
                        pst.setString(1, newBook.getTitleName());
                        pst.setInt(2,Integer.parseInt("1")); //assuming that only 1 copy of the title is inserted in a title
                        pst.execute();
                    }catch(SQLException e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    }
                }     
                else
                {
                    String insertItemQuery = "UPDATE available_items_books SET AvailableItems=(SELECT"
                            + " COUNT(*) FROM books WHERE Name='"+titleNameJTextField.getText()+"')"
                            + " WHERE Name= '"+titleNameJTextField.getText()+"' " ;
                    try
                    {
                        pst = connection.prepareStatement(insertItemQuery);
                        
                        
                        pst.execute();
                    }catch(SQLException e)
                    {
                        JOptionPane.showMessageDialog(null,e);
                    } 
                }
            }
            
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
    }
    
    //private method that handles New Title's Panel jTextFields
    //according to the existence of the inserted title in the database
    private void textFieldSetState(boolean state)
    {
        itemNoJTextField.setEnabled(state);
        authorJTextField.setEnabled(state);
        yearJTextField.setEnabled(state);
        kindJTextField.setEnabled(state);
        isbnJTextField.setEnabled(state);
        pagesJTextField.setEnabled(state);
    }
    
    
    //empty all JTextFields
    private void clearJTextFields(boolean all)
    {
        if(all == true)
            titleNameJTextField.setText("");
        
        itemNoJTextField.setText("");
        authorJTextField.setText("");
        ((JTextField)yearJTextField.getDateEditor().getUiComponent()).setText("");
        kindJTextField.setText("");
        isbnJTextField.setText("");
        pagesJTextField.setText("");
    }
    
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorJTextField;
    private javax.swing.JTextField isbnJTextField;
    private javax.swing.JTextField itemNoJTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField kindJTextField;
    private javax.swing.JPanel newTitleJPanel;
    private javax.swing.JTextField pagesJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JButton searchJButton;
    private javax.swing.JTextField titleNameJTextField;
    private com.toedter.calendar.JDateChooser yearJTextField;
    // End of variables declaration//GEN-END:variables

   
}
